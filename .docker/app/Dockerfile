ARG VERSION
ARG NODE_VERSION
ARG NODE_ALPINE_VERSION

FROM node:${NODE_VERSION}-alpine${NODE_ALPINE_VERSION} AS node
FROM php:${VERSION}-fpm-alpine

# Install packages
RUN apk add --no-cache curl git build-base zlib-dev oniguruma-dev autoconf bash

# Xdebug
ARG INSTALL_XDEBUG
ARG XDEBUG_VERSION
RUN if [ ${INSTALL_XDEBUG} = true ]; \
    then \
      apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \
        && apk add --update linux-headers \
        && pecl install xdebug-${XDEBUG_VERSION} \
        && docker-php-ext-enable xdebug \
        && apk del -f .build-deps; \
    fi;

# Postgres
RUN apk add --no-cache libpq-dev && docker-php-ext-install pdo_pgsql

# Configure non-root user.
ARG PUID
ARG PGID
RUN apk --no-cache add shadow && \
    groupmod -o -g ${PGID} www-data && \
    usermod -o -u ${PUID} -g www-data www-data

# Source code
RUN chown www-data:www-data /var/www
COPY --chown=www-data:www-data ./ /var/www
WORKDIR /var/www

USER www-data

# Node.js
COPY --from=node /usr/lib /usr/lib
COPY --from=node /usr/local/share /usr/local/share
COPY --from=node /usr/local/lib /usr/local/lib
COPY --from=node /usr/local/include /usr/local/include
COPY --from=node /usr/local/bin /usr/local/bin

# Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer